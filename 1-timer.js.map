{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst dateInput = document.querySelector(\"#datetime-picker\");\nconst startBtn = document.querySelector(\".btn-start\");\nconst timerField = document.querySelectorAll(\".value\");\n\nstartBtn.disabled = true;\n\nlet userSelectDate = 0;\nflatpickr(dateInput, {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const currentDate = Date.now();\n        if (selectedDates[0] <= currentDate) {\n            alert(\"Please choose a date in the future\");\n            return\n        }\n        startBtn.disabled = false;\n        userSelectDate = +new Date(selectedDates[0]);\n    }\n});\n\nstartBtn.addEventListener(\"click\", handleStart);\n\nfunction handleStart() {\n    startBtn.disabled = true;\n    dateInput.disabled = true;\n    \n    const timer = setInterval(() => {\n        const currentDate = Date.now();\n        const deltaTime = userSelectDate - currentDate;\n        const deadLine = convertMs(deltaTime);\n        initTimer(deadLine);\n    }, 1000);\n\n}\n\nfunction convertMs(deltaTime) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    const days = Math.floor(deltaTime / day);\n  \n    const hours = Math.floor((deltaTime % day) / hour);\n    const minutes = Math.floor(((deltaTime % day) % hour) / minute);\n    const seconds = Math.floor((((deltaTime % day) % hour) % minute) / second);\n    console.log({ days, hours, minutes, seconds });\n    return { days, hours, minutes, seconds };\n}\n\nfunction initTimer({ days, hours, minutes, seconds }) {\n    const fields = [...timerField];\n    fields[0].textContent = days;\n    fields[1].textContent = hours;\n    fields[2].textContent = minutes;\n    fields[3].textContent = seconds;\n}"],"names":["dateInput","startBtn","timerField","userSelectDate","flatpickr","selectedDates","currentDate","handleStart","deltaTime","deadLine","convertMs","initTimer","days","hours","minutes","seconds","fields"],"mappings":"qxBAIA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAa,SAAS,iBAAiB,QAAQ,EAErDD,EAAS,SAAW,GAEpB,IAAIE,EAAiB,EACrBC,EAAUJ,EAAW,CACjB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQK,EAAe,CACnB,MAAMC,EAAc,KAAK,MACzB,GAAID,EAAc,CAAC,GAAKC,EAAa,CACjC,MAAM,oCAAoC,EAC1C,MACH,CACDL,EAAS,SAAW,GACpBE,EAAiB,CAAC,IAAI,KAAKE,EAAc,CAAC,CAAC,CAC9C,CACL,CAAC,EAEDJ,EAAS,iBAAiB,QAASM,CAAW,EAE9C,SAASA,GAAc,CACnBN,EAAS,SAAW,GACpBD,EAAU,SAAW,GAEP,YAAY,IAAM,CAC5B,MAAMM,EAAc,KAAK,MACnBE,EAAYL,EAAiBG,EAC7BG,EAAWC,EAAUF,CAAS,EACpCG,EAAUF,CAAQ,CACrB,EAAE,GAAI,CAEX,CAEA,SAASC,EAAUF,EAAW,CAK1B,MAAMI,EAAO,KAAK,MAAMJ,EAAY,KAAG,EAEjCK,EAAQ,KAAK,MAAOL,EAAY,MAAO,IAAI,EAC3CM,EAAU,KAAK,MAAQN,EAAY,MAAO,KAAQ,GAAM,EACxDO,EAAU,KAAK,MAASP,EAAY,MAAO,KAAQ,IAAU,GAAM,EACzE,eAAQ,IAAI,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAAE,EACtC,CAAE,KAAAH,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASJ,EAAU,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAClD,MAAMC,EAAS,CAAC,GAAGd,CAAU,EAC7Bc,EAAO,CAAC,EAAE,YAAcJ,EACxBI,EAAO,CAAC,EAAE,YAAcH,EACxBG,EAAO,CAAC,EAAE,YAAcF,EACxBE,EAAO,CAAC,EAAE,YAAcD,CAC5B"}