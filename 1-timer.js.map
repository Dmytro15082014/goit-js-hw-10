{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst dateInput = document.querySelector(\"#datetime-picker\");\nconst startBtn = document.querySelector(\".btn-start\");\nconst timerField = document.querySelectorAll(\".value\");\n\nstartBtn.disabled = true;\nlet userSelectDate = 0;\n\nflatpickr(dateInput, {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const currentDate = Date.now();\n        if (selectedDates[0] <= currentDate) {\n            iziToast.show({\n                title: 'Error',\n                titleColor: '#ffffff',\n                message: 'Please choose a date in the future',\n                messageColor: '#ffffff',\n                color: '#ef4040',\n                position: 'topRight'\n            });\n            return;\n        }\n        startBtn.disabled = false;\n        userSelectDate = +new Date(selectedDates[0]);\n    }\n});\n\nstartBtn.addEventListener(\"click\", handleStart);\n\nfunction handleStart() {\n    startBtn.disabled = true;\n    dateInput.disabled = true;\n    \n    const timerId = setInterval(() => {     \n        const currentDate = Date.now();\n        const deltaTime = userSelectDate - currentDate;\n        if (deltaTime < 0) {\n            clearInterval(timerId);\n            dateInput.disabled = false;\n            return;\n        };\n        const deadLine = convertMs(deltaTime);\n        updateTimer(deadLine, [...timerField]);\n    }, 1000);\n};\n\nfunction convertMs(deltaTime) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(deltaTime / day);  \n    const hours = Math.floor((deltaTime % day) / hour);\n    const minutes = Math.floor(((deltaTime % day) % hour) / minute);\n    const seconds = Math.floor((((deltaTime % day) % hour) % minute) / second);\n    return { days, hours, minutes, seconds };\n};\n\nfunction updateTimer({ days, hours, minutes, seconds }, [fieldDays, fieldHours, fieldMinutes, fieldSeconds]) {\n    fieldDays.textContent = String(days).padStart(2, \"0\");\n    fieldHours.textContent = String(hours).padStart(2, \"0\");\n    fieldMinutes.textContent = String(minutes).padStart(2, \"0\");\n    fieldSeconds.textContent = String(seconds).padStart(2, \"0\");\n};"],"names":["dateInput","startBtn","timerField","userSelectDate","flatpickr","selectedDates","currentDate","iziToast","handleStart","timerId","deltaTime","deadLine","convertMs","updateTimer","days","hours","minutes","seconds","fieldDays","fieldHours","fieldMinutes","fieldSeconds"],"mappings":"4xBAMA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAa,SAAS,iBAAiB,QAAQ,EAErDD,EAAS,SAAW,GACpB,IAAIE,EAAiB,EAErBC,EAAUJ,EAAW,CACjB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQK,EAAe,CACnB,MAAMC,EAAc,KAAK,MACzB,GAAID,EAAc,CAAC,GAAKC,EAAa,CACjCC,EAAS,KAAK,CACV,MAAO,QACP,WAAY,UACZ,QAAS,qCACT,aAAc,UACd,MAAO,UACP,SAAU,UAC1B,CAAa,EACD,MACH,CACDN,EAAS,SAAW,GACpBE,EAAiB,CAAC,IAAI,KAAKE,EAAc,CAAC,CAAC,CAC9C,CACL,CAAC,EAEDJ,EAAS,iBAAiB,QAASO,CAAW,EAE9C,SAASA,GAAc,CACnBP,EAAS,SAAW,GACpBD,EAAU,SAAW,GAErB,MAAMS,EAAU,YAAY,IAAM,CAC9B,MAAMH,EAAc,KAAK,MACnBI,EAAYP,EAAiBG,EACnC,GAAII,EAAY,EAAG,CACf,cAAcD,CAAO,EACrBT,EAAU,SAAW,GACrB,MAEZ,CAAQ,MAAMW,EAAWC,EAAUF,CAAS,EACpCG,EAAYF,EAAU,CAAC,GAAGT,CAAU,CAAC,CACxC,EAAE,GAAI,CACX,CAEA,SAASU,EAAUF,EAAW,CAM1B,MAAMI,EAAO,KAAK,MAAMJ,EAAY,KAAG,EACjCK,EAAQ,KAAK,MAAOL,EAAY,MAAO,IAAI,EAC3CM,EAAU,KAAK,MAAQN,EAAY,MAAO,KAAQ,GAAM,EACxDO,EAAU,KAAK,MAASP,EAAY,MAAO,KAAQ,IAAU,GAAM,EACzE,MAAO,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASJ,EAAY,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAW,CAACC,EAAWC,EAAYC,EAAcC,CAAY,EAAG,CACzGH,EAAU,YAAc,OAAOJ,CAAI,EAAE,SAAS,EAAG,GAAG,EACpDK,EAAW,YAAc,OAAOJ,CAAK,EAAE,SAAS,EAAG,GAAG,EACtDK,EAAa,YAAc,OAAOJ,CAAO,EAAE,SAAS,EAAG,GAAG,EAC1DK,EAAa,YAAc,OAAOJ,CAAO,EAAE,SAAS,EAAG,GAAG,CAC9D"}